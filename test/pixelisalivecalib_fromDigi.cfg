process PIXELGAINCALIB = 
{
   untracked PSet maxEvents = {untracked int32 input = -1}
   source = PoolSource { 
	untracked vstring fileNames = { "rfio:/castor/cern.ch/user/f/fblekman/pix_data/GainCalibrations/Digis/GainCalibration20070514b_digi.root" }
   }     




  service = TFileService {    string fileName = "histogramsPixelAlive_fromDigi.root" }

   # Message Logger
#   include "FWCore/MessageLogger/data/MessageLogger.cfi"
#   or use your own 
   service = MessageLogger {	
	untracked vstring destinations = {"cout"}
	untracked PSet cout = {untracked string threshold = "ERROR"}
   }

  # cabling
  include "CondCore/DBCommon/data/CondDBCommon.cfi"
  replace CondDBCommon.connect = "sqlite_file:/afs/cern.ch/user/c/chiochia/public/cabling.db"
  replace CondDBCommon.catalog = "file:/afs/cern.ch/user/c/chiochia/public/cablingCatalog.xml"
  replace CondDBCommon.timetype = "runnumber"
  replace CondDBCommon.DBParameters.messageLevel = 1
  replace CondDBCommon.DBParameters.authenticationPath="."
  es_source = PoolDBESSource {
    using CondDBCommon
    VPSet toGet={{string record="SiPixelFedCablingMapRcd" string tag="SiPixelFedCablingMap_v1"}}
  }

#include the geometry
   include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
   include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"


   include "CalibTracker/SiPixelIsAliveCalibration/data/SiPixelIsAliveCalibration.cfi"
    replace SiPixelIsAliveCalibration.inputFileName= "/afs/cern.ch/user/f/fblekman/public/calib_20070514b.dat"
   replace SiPixelIsAliveCalibration.src = "siPixelDigis"
 	
	
   # module execution
   path p = { SiPixelIsAliveCalibration }

# the database output


#  module print = AsciiOutputModule {}
#  endpath ep = { print }
   # Timing service
#    service = Timing {}

}
